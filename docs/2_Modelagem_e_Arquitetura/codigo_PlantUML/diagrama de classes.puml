@startuml Diagrama de Classes - Simples e Limpo

' --- Classes de Modelo (Entidades) ---
class User {
  -id: int
  -name: String
  -age: int
}

class Room {
  -id: int
  -name: String
}

class Device {
  -id: int
  -name: String
  -active: boolean
}

class Scene {
  -id: int
  -name: String
  -code_active: String
  -active: boolean
}

' --- Classes de Serviço (Lógica de Negócio) ---
class UserService {
  +createUser(name, age, db)
  +getUser(user_id, db)
  +listUsers(db)
  +deleteUser(user_id, db)
  +updateUser(user_id, data, db)
}

class RoomService {
  +create_room(name, db)
  +update_room_name(room_id, new_name, db)
  +delete_room(room_id, db)
  +list_rooms(db)
  +get_room(room_id, db)
  +add_devices_to_room(room, device_ids, db)
  +remove_devices_from_room(room, device_ids, db)
}

class DeviceService {
  +create_device(name, room_id, db)
  +get_device(device_id, db)
  +list_devices(db)
  +toggle_device(device_id, active, db)
  +delete_device(device_id, db)
}

class SceneService {
  +create_scene(db, room, scene_create)
  +add_devices_to_scene(scene, device_ids, db)
  +remove_devices_from_scene(scene, device_ids, db)
  +activate_scene(scene_id, db)
  +deactivate_scene(scene_id, db)
  +get_scene(scene_id, db)
  +list_scenes(db)
}

' --- Relacionamentos entre Entidades ---
Room "1" -- "0..*" Device : contém
Room "1" -- "0..*" Scene : contém
Scene "1" -- "0..*" Device : controla

' --- Relacionamentos de Dependência ---
UserService ..> User
RoomService ..> Room
DeviceService ..> Device
SceneService ..> Scene

@enduml